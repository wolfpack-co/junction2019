# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    tasks: 'build generateWebConfig --stacktrace --info'

# Diagnostics for stupid people
#- script: |
#    echo "$(Pipeline.Workspace)s\build\libs"
#- script: |
#    echo "$(Build.SourcesDirectory)s\build\libs"

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: 'web.config'
    TargetFolder: '$(Build.SourcesDirectory)/build/libs'

# Publish pipeline artifact
# Publish (upload) a file or directory as a named artifact for the current run
# Can use $(Pipeline.Workspace) in target path? or $(Build.SourcesDirectory)
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.SourcesDirectory)/build/libs'
    artifact: 'backend'
    publishLocation: 'pipeline'
